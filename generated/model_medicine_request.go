/*
薬情報 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MedicineRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MedicineRequest{}

// MedicineRequest struct for MedicineRequest
type MedicineRequest struct {
	// 薬の名前
	MedicineName string `json:"medicineName"`
	// 薬のタイプ
	MedicineType string `json:"medicineType"`
}

// NewMedicineRequest instantiates a new MedicineRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMedicineRequest(medicineName string, medicineType string) *MedicineRequest {
	this := MedicineRequest{}
	this.MedicineName = medicineName
	this.MedicineType = medicineType
	return &this
}

// NewMedicineRequestWithDefaults instantiates a new MedicineRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMedicineRequestWithDefaults() *MedicineRequest {
	this := MedicineRequest{}
	return &this
}

// GetMedicineName returns the MedicineName field value
func (o *MedicineRequest) GetMedicineName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MedicineName
}

// GetMedicineNameOk returns a tuple with the MedicineName field value
// and a boolean to check if the value has been set.
func (o *MedicineRequest) GetMedicineNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MedicineName, true
}

// SetMedicineName sets field value
func (o *MedicineRequest) SetMedicineName(v string) {
	o.MedicineName = v
}

// GetMedicineType returns the MedicineType field value
func (o *MedicineRequest) GetMedicineType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MedicineType
}

// GetMedicineTypeOk returns a tuple with the MedicineType field value
// and a boolean to check if the value has been set.
func (o *MedicineRequest) GetMedicineTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MedicineType, true
}

// SetMedicineType sets field value
func (o *MedicineRequest) SetMedicineType(v string) {
	o.MedicineType = v
}

func (o MedicineRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MedicineRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["medicineName"] = o.MedicineName
	toSerialize["medicineType"] = o.MedicineType
	return toSerialize, nil
}

type NullableMedicineRequest struct {
	value *MedicineRequest
	isSet bool
}

func (v NullableMedicineRequest) Get() *MedicineRequest {
	return v.value
}

func (v *NullableMedicineRequest) Set(val *MedicineRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMedicineRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMedicineRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMedicineRequest(val *MedicineRequest) *NullableMedicineRequest {
	return &NullableMedicineRequest{value: val, isSet: true}
}

func (v NullableMedicineRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMedicineRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


